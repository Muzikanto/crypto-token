{
  "contractName": "Mintable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allowanceSelf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowanceSelf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/Mintable.sol\":\"Mintable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/Approvable.sol\":{\"keccak256\":\"0x96773d8809d0562f3e8a05a9d7135915010d31f0369504cd8ef1fbabeed452f9\",\"urls\":[\"bzz-raw://b5d36f70d38bc94cc6e71faf59e3cd46f298a4ce34f9c5250239e544398a76b6\",\"dweb:/ipfs/QmVLKB2v1Z6f1uTiA9MG1VugoRVQ5UieaoPpBHxxqafFGn\"]},\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/Context.sol\":{\"keccak256\":\"0xca866687feb3a1d8bdde5f9f2f38ebf9df3cf6a9458a3e4a604e2d4b25208a03\",\"urls\":[\"bzz-raw://b437bf6d05e98a72f2127b19367b13df6f28e0bba30afb9d51d030e1c9272e5b\",\"dweb:/ipfs/QmbvYXDumj3AM9TgXPXGqFvHbyYpMQ9CQMo35VDCCCSZUM\"]},\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/Mintable.sol\":{\"keccak256\":\"0x19e66caadd81a1bd075cf6fa6770dd2c94a8d31297d539076b8bacca3961bfeb\",\"urls\":[\"bzz-raw://c8dfe3e5c58f132a5c260cb618d493de2f3dff834ad68e5d437d66e7d0b5b5ad\",\"dweb:/ipfs/Qmejm4E1KEmmMRjiP8KMS9wPtJBhhBhecNhzWZ3U7im4KJ\"]},\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/Ownable.sol\":{\"keccak256\":\"0x79f72f5bd98f3cf5da755d901d00f706366cadcdd6ad42a1ed48a2ef00b6b1ce\",\"urls\":[\"bzz-raw://340d9ba06c05074022e2ba90fc718d930a6b044f2b5fd607b07b698147f10793\",\"dweb:/ipfs/QmVUWnHARux3L7pQFJtAuawVXfbMdFU8eb8sB82fCdGyMb\"]},\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/SafeMath.sol\":{\"keccak256\":\"0x95200ebfefe0d3ec35c14db6570eb5a7aeed516c003912007e0d8f3fa796764a\",\"urls\":[\"bzz-raw://8d7b41a21c8bc0c8e5cc01b538990788e6c0db1992101111b33780c29ea0972f\",\"dweb:/ipfs/Qmc25ErB37JStE52YmaZiAAtoWRqau7VsmJbeLYMv6CutB\"]},\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/Token.sol\":{\"keccak256\":\"0xc4eb27926008d18c75211eccb3b669679b70ceb6098b6728fc4ee3fee7813dd6\",\"urls\":[\"bzz-raw://969dd145dd40c0d657ca25aa07fda8ad355b4794be8ed97a8d7a0bbcc4e708e6\",\"dweb:/ipfs/QmXuy1w6wrZQWbGkeUVkPRLLjrjY3W65LMgDJnBKk915Dd\"]},\"/Users/maximschiriy/Work/Bsc-test/contract/contracts/Vault.sol\":{\"keccak256\":\"0x79feba07674ad23c7135e8301a0080ca0b18f54b4615cea2529a01035829c86c\",\"urls\":[\"bzz-raw://3ec0ba0c0683354e8d1fe878c40cd19efec0020d0f25a09bfe5f50958c9e6e64\",\"dweb:/ipfs/QmRa66VZab94bTF4HjdPGDy7TfGtRerWqksKi2D8jFjCQd\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063a9059cbb11610066578063a9059cbb14610334578063d58e57781461039a578063dd62ed3e146103b8578063f2fde38b14610430576100cf565b80638da5cb5b1461023e578063a0712d6814610288578063a457c2d7146102ce576100cf565b8063095ea7b3146100d457806318160ddd1461013a5780633061189114610158578063395093511461017657806370a08231146101dc578063715018a614610234575b600080fd5b610120600480360360408110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610474565b604051808215151515815260200191505060405180910390f35b610142610492565b6040518082815260200191505060405180910390f35b61016061049b565b6040518082815260200191505060405180910390f35b6101c26004803603604081101561018c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104b3565b604051808215151515815260200191505060405180910390f35b61021e600480360360208110156101f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610566565b6040518082815260200191505060405180910390f35b61023c610578565b005b610246610703565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b46004803603602081101561029e57600080fd5b810190808035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61031a600480360360408110156102e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610813565b604051808215151515815260200191505060405180910390f35b6103806004803603604081101561034a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108e0565b604051808215151515815260200191505060405180910390f35b6103a26108fe565b6040518082815260200191505060405180910390f35b61041a600480360360408110156103ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061090d565b6040518082815260200191505060405180910390f35b6104726004803603602081101561044657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610921565b005b60006104886104816109f7565b84846109ff565b6001905092915050565b60008054905090565b60006104ae6104a86109f7565b30610bf6565b905090565b600061055c6104c06109f7565b8461055785600560006104d16109f7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7d90919063ffffffff16565b6109ff565b6001905092915050565b600061057182610d05565b9050919050565b6105806109f7565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006107376109f7565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61080a610804610d4e565b83610d56565b60019050919050565b60006108d66108206109f7565b846108d1856040518060600160405280602581526020016114a2602591396005600061084a6109f7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f199092919063ffffffff16565b6109ff565b6001905092915050565b60006108f46108ed6109f7565b8484610fd9565b6001905092915050565b6000610908611293565b905090565b60006109198383610bf6565b905092915050565b6109296109f7565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6109f4816112a3565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061140f6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806114c76022913960400191505060405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610cfb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600030905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b610e0e81600054610c7d90919063ffffffff16565b600081905550610e6681600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7d90919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16610ec8610d4e565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000838311158290610fc6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f8b578082015181840152602081019050610f70565b50505050905090810190601f168015610fb85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561105f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806113ea6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061147f6023913960400191505060405180910390fd5b6111518160405180606001604052806026815260200161145960269139600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f199092919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111e681600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7d90919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600061129e30610d05565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611329576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806114336026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820144790574fff7e99203c315552f296347a284d1c617aab64c2c8c245f2de23b764736f6c63430005100032",
  "sourceMap": "143:956:5:-;;;828:17:7;848:12;:10;;;:12;;:::i;:::-;828:32;;879:9;870:6;;:18;;;;;;;;;;;;;;;;;;936:9;903:43;;932:1;903:43;;;;;;;;;;;;794:159;143:956:5;;736:96:2;781:15;815:10;808:17;;736:96;:::o;143:956:5:-;;;;;;;",
  "deployedSourceMap": "143:956:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;143:956:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:151:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;753:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;221:91:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;496:120:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1299:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1299:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;621:111:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;621:111:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1653:137:7;;;:::i;:::-;;1030:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;389:130:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;389:130:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1993:258:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1993:258:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1042:157:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1042:157:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;738:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;357:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;357:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1939:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1939:107:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;753:151:0;821:4;837:39;846:12;:10;:12::i;:::-;860:7;869:6;837:8;:39::i;:::-;893:4;886:11;;753:151;;;;:::o;221:91:9:-;267:7;293:12;;286:19;;221:91;:::o;496:120:0:-;544:7;570:39;581:12;:10;:12::i;:::-;603:4;570:10;:39::i;:::-;563:46;;496:120;:::o;1299:207::-;1379:4;1395:83;1404:12;:10;:12::i;:::-;1418:7;1427:50;1466:10;1427:11;:25;1439:12;:10;:12::i;:::-;1427:25;;;;;;;;;;;;;;;:34;1453:7;1427:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;1395:8;:83::i;:::-;1495:4;1488:11;;1299:207;;;;:::o;621:111:10:-;680:7;706:19;717:7;706:10;:19::i;:::-;699:26;;621:111;;;:::o;1653:137:7:-;1244:12;:10;:12::i;:::-;1234:22;;:6;;;;;;;;;;;:22;;;1226:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:1;1714:40;;1735:6;;;;;;;;;;;1714:40;;;;;;;;;;;;1781:1;1764:6;;:19;;;;;;;;;;;;;;;;;;1653:137::o;1030:77::-;1068:7;1094:6;;;;;;;;;;;1087:13;;1030:77;:::o;389:130:5:-;445:4;1244:12:7;:10;:12::i;:::-;1234:22;;:6;;;;;;;;;;;:22;;;1226:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:30:5;467:15;:13;:15::i;:::-;484:6;461:5;:30::i;:::-;508:4;501:11;;389:130;;;:::o;1993:258:0:-;2078:4;2094:129;2103:12;:10;:12::i;:::-;2117:7;2126:96;2165:15;2126:96;;;;;;;;;;;;;;;;;:11;:25;2138:12;:10;:12::i;:::-;2126:25;;;;;;;;;;;;;;;:34;2152:7;2126:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;2094:8;:129::i;:::-;2240:4;2233:11;;1993:258;;;;:::o;1042:157:10:-;1113:4;1129:42;1139:12;:10;:12::i;:::-;1153:9;1164:6;1129:9;:42::i;:::-;1188:4;1181:11;;1042:157;;;;:::o;738:101::-;788:7;814:18;:16;:18::i;:::-;807:25;;738:101;:::o;357:133:0:-;431:7;457:26;468:5;475:7;457:10;:26::i;:::-;450:33;;357:133;;;;:::o;1939:107:7:-;1244:12;:10;:12::i;:::-;1234:22;;:6;;;;;;;;;;;:22;;;1226:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:28;2030:8;2011:18;:28::i;:::-;1939:107;:::o;736:96:2:-;781:15;815:10;808:17;;736:96;:::o;2676:332:0:-;2786:1;2769:19;;:5;:19;;;;2761:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2866:1;2847:21;;:7;:21;;;;2839:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:6;2918:11;:18;2930:5;2918:18;;;;;;;;;;;;;;;:27;2937:7;2918:27;;;;;;;;;;;;;;;:36;;;;2985:7;2969:32;;2978:5;2969:32;;;2994:6;2969:32;;;;;;;;;;;;;;;;;;2676:332;;;:::o;3014:135::-;3089:7;3115:11;:18;3127:5;3115:18;;;;;;;;;;;;;;;:27;3134:7;3115:27;;;;;;;;;;;;;;;;3108:34;;3014:135;;;;:::o;834:176:8:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2825:111:10:-;2885:7;2911:9;:18;2921:7;2911:18;;;;;;;;;;;;;;;;2904:25;;2825:111;;;:::o;474:89::-;517:7;551:4;536:20;;474:89;:::o;790:307:5:-;884:1;865:21;;:7;:21;;;;857:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:24;965:6;948:12;;:16;;:24;;;;:::i;:::-;933:12;:39;;;;1003:30;1026:6;1003:9;:18;1013:7;1003:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;982:9;:18;992:7;982:18;;;;;;;;;;;;;;;:51;;;;1074:7;1048:42;;1057:15;:13;:15::i;:::-;1048:42;;;1083:6;1048:42;;;;;;;;;;;;;;;;;;790:307;;:::o;1692:187:8:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;2304:464:10:-;2419:1;2401:20;;:6;:20;;;;2393:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2502:1;2481:23;;:9;:23;;;;2473:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575;2597:6;2575:71;;;;;;;;;;;;;;;;;:9;:17;2585:6;2575:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;2555:9;:17;2565:6;2555:17;;;;;;;;;;;;;;;:91;;;;2679:32;2704:6;2679:9;:20;2689:9;2679:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;2656:9;:20;2666:9;2656:20;;;;;;;;;;;;;;;:55;;;;2743:9;2726:35;;2735:6;2726:35;;;2754:6;2726:35;;;;;;;;;;;;;;;;;;2304:464;;;:::o;2942:109::-;2993:7;3019:25;3038:4;3019:10;:25::i;:::-;3012:32;;2942:109;:::o;2147:225:7:-;2240:1;2220:22;;:8;:22;;;;2212:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2329:8;2300:38;;2321:6;;;;;;;;;;;2300:38;;;;;;;;;;;;2357:8;2348:6;;:17;;;;;;;;;;;;;;;;;;2147:225;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"./Context.sol\";\nimport \"./Ownable.sol\";\nimport \"./Vault.sol\";\nimport \"./Token.sol\";\nimport \"./SafeMath.sol\";\n\ncontract Mintable is Context, Token, Ownable, Vault {\n    /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        _mint(_vaultAddress(), amount);\n        return true;\n    }\n\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(_vaultAddress(), account, amount);\n    }\n}",
  "sourcePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Mintable.sol",
  "ast": {
    "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Mintable.sol",
    "exportedSymbols": {
      "Mintable": [
        541
      ]
    },
    "id": 542,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 467,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Context.sol",
        "file": "./Context.sol",
        "id": 468,
        "nodeType": "ImportDirective",
        "scope": 542,
        "sourceUnit": 309,
        "src": "25:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 469,
        "nodeType": "ImportDirective",
        "scope": 542,
        "sourceUnit": 727,
        "src": "49:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Vault.sol",
        "file": "./Vault.sol",
        "id": 470,
        "nodeType": "ImportDirective",
        "scope": 542,
        "sourceUnit": 1125,
        "src": "73:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 471,
        "nodeType": "ImportDirective",
        "scope": 542,
        "sourceUnit": 933,
        "src": "95:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 472,
        "nodeType": "ImportDirective",
        "scope": 542,
        "sourceUnit": 914,
        "src": "117:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 473,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 308,
              "src": "164:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$308",
                "typeString": "contract Context"
              }
            },
            "id": 474,
            "nodeType": "InheritanceSpecifier",
            "src": "164:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 475,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 932,
              "src": "173:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$932",
                "typeString": "contract Token"
              }
            },
            "id": 476,
            "nodeType": "InheritanceSpecifier",
            "src": "173:5:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 477,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 726,
              "src": "180:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$726",
                "typeString": "contract Ownable"
              }
            },
            "id": 478,
            "nodeType": "InheritanceSpecifier",
            "src": "180:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 479,
              "name": "Vault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1124,
              "src": "189:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vault_$1124",
                "typeString": "contract Vault"
              }
            },
            "id": 480,
            "nodeType": "InheritanceSpecifier",
            "src": "189:5:5"
          }
        ],
        "contractDependencies": [
          184,
          308,
          726,
          932,
          1124
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 541,
        "linearizedBaseContracts": [
          541,
          1124,
          184,
          726,
          932,
          308
        ],
        "name": "Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "451:68:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 490,
                          "name": "_vaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "467:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "467:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 492,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "484:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 489,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "461:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "461:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "508:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 488,
                  "id": 496,
                  "nodeType": "Return",
                  "src": "501:11:5"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 485,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 484,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 670,
                  "src": "426:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "426:9:5"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "403:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "402:16:5"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "445:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "444:6:5"
            },
            "scope": 541,
            "src": "389:130:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "847:250:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 506,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 500,
                          "src": "865:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "884:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "876:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "876:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "865:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "888:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        },
                        "value": "BEP20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        }
                      ],
                      "id": 505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1142,
                        1143
                      ],
                      "referencedDeclaration": 1143,
                      "src": "857:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "857:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "933:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 517,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "965:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 515,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 917,
                          "src": "948:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 753,
                        "src": "948:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "948:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "933:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "933:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "982:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 523,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 522,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "992:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "982:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 528,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 502,
                          "src": "1026:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 524,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "1003:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 526,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 525,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 500,
                            "src": "1013:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1003:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 753,
                        "src": "1003:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1003:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "982:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "982:51:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 533,
                          "name": "_vaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "1057:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1057:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 535,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "1074:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 536,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "1083:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 532,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 956,
                      "src": "1048:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "EmitStatement",
                  "src": "1043:47:5"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "805:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "822:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "804:33:5"
            },
            "returnParameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:5"
            },
            "scope": 541,
            "src": "790:307:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 542,
        "src": "143:956:5"
      }
    ],
    "src": "0:1099:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Mintable.sol",
      "exportedSymbols": {
        "Mintable": [
          541
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 467,
        "name": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 309,
          "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Context.sol",
          "file": "./Context.sol",
          "scope": 542,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 468,
        "name": "ImportDirective",
        "src": "25:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 727,
          "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Ownable.sol",
          "file": "./Ownable.sol",
          "scope": 542,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 469,
        "name": "ImportDirective",
        "src": "49:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 1125,
          "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Vault.sol",
          "file": "./Vault.sol",
          "scope": 542,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 470,
        "name": "ImportDirective",
        "src": "73:21:5"
      },
      {
        "attributes": {
          "SourceUnit": 933,
          "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/Token.sol",
          "file": "./Token.sol",
          "scope": 542,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 471,
        "name": "ImportDirective",
        "src": "95:21:5"
      },
      {
        "attributes": {
          "SourceUnit": 914,
          "absolutePath": "/Users/maximschiriy/Work/Bsc-test/contract/contracts/SafeMath.sol",
          "file": "./SafeMath.sol",
          "scope": 542,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 472,
        "name": "ImportDirective",
        "src": "117:24:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            184,
            308,
            726,
            932,
            1124
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            541,
            1124,
            184,
            726,
            932,
            308
          ],
          "name": "Mintable",
          "scope": 542
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Context",
                  "referencedDeclaration": 308,
                  "type": "contract Context"
                },
                "id": 473,
                "name": "UserDefinedTypeName",
                "src": "164:7:5"
              }
            ],
            "id": 474,
            "name": "InheritanceSpecifier",
            "src": "164:7:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Token",
                  "referencedDeclaration": 932,
                  "type": "contract Token"
                },
                "id": 475,
                "name": "UserDefinedTypeName",
                "src": "173:5:5"
              }
            ],
            "id": 476,
            "name": "InheritanceSpecifier",
            "src": "173:5:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 726,
                  "type": "contract Ownable"
                },
                "id": 477,
                "name": "UserDefinedTypeName",
                "src": "180:7:5"
              }
            ],
            "id": 478,
            "name": "InheritanceSpecifier",
            "src": "180:7:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Vault",
                  "referencedDeclaration": 1124,
                  "type": "contract Vault"
                },
                "id": 479,
                "name": "UserDefinedTypeName",
                "src": "189:5:5"
              }
            ],
            "id": 480,
            "name": "InheritanceSpecifier",
            "src": "189:5:5"
          },
          {
            "attributes": {
              "documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "scope": 541,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 498,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 481,
                        "name": "ElementaryTypeName",
                        "src": "403:7:5"
                      }
                    ],
                    "id": 482,
                    "name": "VariableDeclaration",
                    "src": "403:14:5"
                  }
                ],
                "id": 483,
                "name": "ParameterList",
                "src": "402:16:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 498,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 486,
                        "name": "ElementaryTypeName",
                        "src": "445:4:5"
                      }
                    ],
                    "id": 487,
                    "name": "VariableDeclaration",
                    "src": "445:4:5"
                  }
                ],
                "id": 488,
                "name": "ParameterList",
                "src": "444:6:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 670,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 484,
                    "name": "Identifier",
                    "src": "426:9:5"
                  }
                ],
                "id": 485,
                "name": "ModifierInvocation",
                "src": "426:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 540,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 489,
                            "name": "Identifier",
                            "src": "461:5:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 966,
                                  "type": "function () returns (address)",
                                  "value": "_vaultAddress"
                                },
                                "id": 490,
                                "name": "Identifier",
                                "src": "467:13:5"
                              }
                            ],
                            "id": 491,
                            "name": "FunctionCall",
                            "src": "467:15:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 482,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 492,
                            "name": "Identifier",
                            "src": "484:6:5"
                          }
                        ],
                        "id": 493,
                        "name": "FunctionCall",
                        "src": "461:30:5"
                      }
                    ],
                    "id": 494,
                    "name": "ExpressionStatement",
                    "src": "461:30:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 488
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 495,
                        "name": "Literal",
                        "src": "508:4:5"
                      }
                    ],
                    "id": 496,
                    "name": "Return",
                    "src": "501:11:5"
                  }
                ],
                "id": 497,
                "name": "Block",
                "src": "451:68:5"
              }
            ],
            "id": 498,
            "name": "FunctionDefinition",
            "src": "389:130:5"
          },
          {
            "attributes": {
              "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_mint",
              "scope": 541,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 540,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 499,
                        "name": "ElementaryTypeName",
                        "src": "805:7:5"
                      }
                    ],
                    "id": 500,
                    "name": "VariableDeclaration",
                    "src": "805:15:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 540,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 501,
                        "name": "ElementaryTypeName",
                        "src": "822:7:5"
                      }
                    ],
                    "id": 502,
                    "name": "VariableDeclaration",
                    "src": "822:14:5"
                  }
                ],
                "id": 503,
                "name": "ParameterList",
                "src": "804:33:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 504,
                "name": "ParameterList",
                "src": "847:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                                  "typeString": "literal_string \"BEP20: mint to the zero address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1142,
                                1143
                              ],
                              "referencedDeclaration": 1143,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 505,
                            "name": "Identifier",
                            "src": "857:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 500,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 506,
                                "name": "Identifier",
                                "src": "865:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 507,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "876:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 508,
                                    "name": "Literal",
                                    "src": "884:1:5"
                                  }
                                ],
                                "id": 509,
                                "name": "FunctionCall",
                                "src": "876:10:5"
                              }
                            ],
                            "id": 510,
                            "name": "BinaryOperation",
                            "src": "865:21:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"BEP20: mint to the zero address\"",
                              "value": "BEP20: mint to the zero address"
                            },
                            "id": 511,
                            "name": "Literal",
                            "src": "888:33:5"
                          }
                        ],
                        "id": 512,
                        "name": "FunctionCall",
                        "src": "857:65:5"
                      }
                    ],
                    "id": 513,
                    "name": "ExpressionStatement",
                    "src": "857:65:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 917,
                              "type": "uint256",
                              "value": "_totalSupply"
                            },
                            "id": 514,
                            "name": "Identifier",
                            "src": "933:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 753,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 917,
                                      "type": "uint256",
                                      "value": "_totalSupply"
                                    },
                                    "id": 515,
                                    "name": "Identifier",
                                    "src": "948:12:5"
                                  }
                                ],
                                "id": 516,
                                "name": "MemberAccess",
                                "src": "948:16:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 502,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 517,
                                "name": "Identifier",
                                "src": "965:6:5"
                              }
                            ],
                            "id": 518,
                            "name": "FunctionCall",
                            "src": "948:24:5"
                          }
                        ],
                        "id": 519,
                        "name": "Assignment",
                        "src": "933:39:5"
                      }
                    ],
                    "id": 520,
                    "name": "ExpressionStatement",
                    "src": "933:39:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 948,
                                  "type": "mapping(address => uint256)",
                                  "value": "_balances"
                                },
                                "id": 521,
                                "name": "Identifier",
                                "src": "982:9:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 500,
                                  "type": "address",
                                  "value": "account"
                                },
                                "id": 522,
                                "name": "Identifier",
                                "src": "992:7:5"
                              }
                            ],
                            "id": 523,
                            "name": "IndexAccess",
                            "src": "982:18:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 753,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 948,
                                          "type": "mapping(address => uint256)",
                                          "value": "_balances"
                                        },
                                        "id": 524,
                                        "name": "Identifier",
                                        "src": "1003:9:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 500,
                                          "type": "address",
                                          "value": "account"
                                        },
                                        "id": 525,
                                        "name": "Identifier",
                                        "src": "1013:7:5"
                                      }
                                    ],
                                    "id": 526,
                                    "name": "IndexAccess",
                                    "src": "1003:18:5"
                                  }
                                ],
                                "id": 527,
                                "name": "MemberAccess",
                                "src": "1003:22:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 502,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 528,
                                "name": "Identifier",
                                "src": "1026:6:5"
                              }
                            ],
                            "id": 529,
                            "name": "FunctionCall",
                            "src": "1003:30:5"
                          }
                        ],
                        "id": 530,
                        "name": "Assignment",
                        "src": "982:51:5"
                      }
                    ],
                    "id": 531,
                    "name": "ExpressionStatement",
                    "src": "982:51:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 956,
                              "type": "function (address,address,uint256)",
                              "value": "Transfer"
                            },
                            "id": 532,
                            "name": "Identifier",
                            "src": "1048:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 966,
                                  "type": "function () returns (address)",
                                  "value": "_vaultAddress"
                                },
                                "id": 533,
                                "name": "Identifier",
                                "src": "1057:13:5"
                              }
                            ],
                            "id": 534,
                            "name": "FunctionCall",
                            "src": "1057:15:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 500,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 535,
                            "name": "Identifier",
                            "src": "1074:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 502,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 536,
                            "name": "Identifier",
                            "src": "1083:6:5"
                          }
                        ],
                        "id": 537,
                        "name": "FunctionCall",
                        "src": "1048:42:5"
                      }
                    ],
                    "id": 538,
                    "name": "EmitStatement",
                    "src": "1043:47:5"
                  }
                ],
                "id": 539,
                "name": "Block",
                "src": "847:250:5"
              }
            ],
            "id": 540,
            "name": "FunctionDefinition",
            "src": "790:307:5"
          }
        ],
        "id": 541,
        "name": "ContractDefinition",
        "src": "143:956:5"
      }
    ],
    "id": 542,
    "name": "SourceUnit",
    "src": "0:1099:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-28T16:53:10.622Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(uint256)": {
        "details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}